['https://doc.primekey.com/display//EJBCA740/Installation+and+Deployment']
['https://doc.primekey.com/display//EJBCA740/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA741/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCA741/Installation+and+Deployment']
['https://doc.primekey.com/display//EJBCA741/Enrollment+Questions']
['/pages/viewpage.action?pageId=16683914']
['https://doc.primekey.com/display//EJBCA741/Publishing']
['https://doc.primekey.com/display//EJBCA741/Validation+Authority']
['https://doc.primekey.com/display//EJBCA742/Validation+Authority']
['https://doc.primekey.com/display//EJBCA742/Publishing']




EJBCA 7.3.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by runningg the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. The file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.
Make sure you restart JBoss after making changes to the java trust store.

Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. the file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.

TEXT

Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'default' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.5
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.5
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.5
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.1
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.5
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.6.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.7.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×






['/pages/viewpage.action?pageId=16686804']
['https://doc.primekey.com/display//EJBCA742/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA742/Installation+and+Deployment']
['https://doc.primekey.com/display//EJBCA742/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCA743/Validation+Authority']
['https://doc.primekey.com/display//EJBCA743/Publishing']
['/pages/viewpage.action?pageId=16687990']
['https://doc.primekey.com/display//EJBCA743/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA743/Installation+and+Deployment']
['https://doc.primekey.com/display//EJBCA743/Cryptography+and+Security']




EJBCA 7.3.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by runningg the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. The file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.
Make sure you restart JBoss after making changes to the java trust store.

Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. the file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.

TEXT

Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'default' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.5
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.5
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.5
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.1
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.5
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.6.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.7.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×






['https://doc.primekey.com/display//EJBCADS/Installation+and+Deployment']
['/pages/viewpage.action?pageId=6029885']
['https://doc.primekey.com/display//EJBCADS/PKI+Management']
['https://doc.primekey.com/display//EJBCADS/Publishing']
['https://doc.primekey.com/display//EJBCADS/Validation+Authority']
['https://doc.primekey.com/display//EJBCA750/PKI+Management']
['https://doc.primekey.com/display//EJBCA750/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCA750/Installation+and+Deployment']
['https://doc.primekey.com/display//EJBCA750/Enrollment+Questions']
['/pages/viewpage.action?pageId=16689285']




EJBCA 7.3.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by runningg the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. The file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.
Make sure you restart JBoss after making changes to the java trust store.

Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. the file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.

TEXT

Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'default' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.5
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.5
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.5
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.1
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.5
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.6.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.7.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×






['https://doc.primekey.com/display//EJBCA750/Publishing']
['https://doc.primekey.com/display//EJBCA750/Validation+Authority']
['https://doc.primekey.com/display//EJBCA750/Troubleshoot+Database+Performance']
['https://doc.primekey.com/display//EJBCA760/PKI+Management']
['https://doc.primekey.com/display//EJBCA760/Troubleshoot+Database+Performance']
['https://doc.primekey.com/display//EJBCA760/Validation+Authority']
['https://doc.primekey.com/display//EJBCA760/Publishing']
['/pages/viewpage.action?pageId=31622840']
['https://doc.primekey.com/display//EJBCA760/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA760/Installation+and+Deployment']




EJBCA 7.3.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by runningg the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. The file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.
Make sure you restart JBoss after making changes to the java trust store.

Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. the file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.

TEXT

Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'default' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.5
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.5
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.5
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.1
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.5
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.6.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.7.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×






['https://doc.primekey.com/display//EJBCA760/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCADS/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCADS/Troubleshoot+Database+Performance']
['https://doc.primekey.com/display//EJBCA770/PKI+Management']
['https://doc.primekey.com/display//EJBCA770/Troubleshoot+Database+Performance']
['https://doc.primekey.com/display//EJBCA770/Validation+Authority']
['https://doc.primekey.com/display//EJBCA770/Publishing']
['/pages/viewpage.action?pageId=31624583']
['https://doc.primekey.com/display//EJBCA770/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA770/Installation+and+Deployment']




EJBCA 7.3.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by runningg the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. The file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.
Make sure you restart JBoss after making changes to the java trust store.

Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. the file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.

TEXT

Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'default' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.5
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.5
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.5
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.1
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.5
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.6.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.7.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×






['https://doc.primekey.com/display//EJBCA770/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCA780/PKI+Management']
['https://doc.primekey.com/display//EJBCA780/Troubleshoot+Database+Performance']
['https://doc.primekey.com/display//EJBCA780/Validation+Authority']
['https://doc.primekey.com/display//EJBCA780/Publishing']
['/pages/viewpage.action?pageId=39620888']
['https://doc.primekey.com/display//EJBCA780/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA780/Installation+and+Deployment']
['https://doc.primekey.com/display//EJBCA780/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCA781/PKI+Management']




EJBCA 7.3.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by runningg the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. The file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.
Make sure you restart JBoss after making changes to the java trust store.

Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. the file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.

TEXT

Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'default' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.2
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.4.3
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.5
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.5
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.5
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.5
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.5
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.6.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.7.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.0
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by running the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss configuration was not done automatically because you are running another configuration than 'default' in JBoss. Generally, the server configuration is located in the file JBOSS_HOME/standaone/configuration/standalone.xml.Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'standalone' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×










EJBCA 7.8.0
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.8.1
Troubleshooting Guide
Current: PKI Management


PKI Management





 I've lost my superadmin certificate/My superadmin certificate has expired You have brought shame upon your dojo. Never fear though, you can solve this from the CLI:
$ bin/ejbca.sh ra setuserstatus superadmin 10 
$ bin/ejbca.sh ra setclearpwd superadmin password 
$ bin/ejbca.sh batch 

BASH

You can now remove the old P12 if still available and import the new one to your browser. 




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Troubleshoot Database Performance


Troubleshoot Database Performance





The following provides information for troubleshooting database performance issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.






Before starting any database performance troubleshooting, ensure that you have (at least) the recommended database indexes applied. See doc/sql-scripts for recommended indexes.



Enable Performance Statistics in WildFlyTo troubleshoot database performance in WildFly, follow the steps below.  






The following instructions have been tested with WildFly 14.



Run the following command to list available data sources.
> cd ${WILDFLY_HOME}
> ./bin/jboss-cli.sh --connect '/subsystem=datasources:read-resource()'
{
    "outcome" => "success",
    "result" => {
        "data-source" => {"ejbcads" => undefined},
        "xa-data-source" => undefined
    }
}

CODE

Make a note of the datasource used by EJBCA as this information is used in the next step. In the example above, the name of the datasource is ejbcads, but it can be different on your system.Run the following commands to enable performance and SQL logging in Hibernate.






Replace the datasource ejbcads with the name of the datasource you noted down in the previous step. 




./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=pool:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/subsystem=datasources/data-source=ejbcads/statistics=jdbc:write-attribute(name=statistics-enabled,value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.generate_statistics:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.show_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.format_sql:add(value=true)'
./bin/jboss-cli.sh --connect '/system-property=hibernate.use_sql_comments:add(value=true)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:add()'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.hibernate.stat:write-attribute(name=level, value=DEBUG)'

CODE

Run the following commands to enable debugging of EJBCA and CeSeCore.
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)'
./bin/jboss-cli.sh --connect '/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)'

CODE

Restart WildFly.
systemctl restart wildfly

CODE

Load EJBCA in the browser and tail the log file.
tail -f /opt/jboss/standalone/log/server.log

CODE

It may be good to know the load times reported by the browser for reference. Assuming Chromium is used, you can see how much time it takes to load different resources by pressing Ctrl+Shift+I and opening the Network tab as shown in the screenshot below.Perform some operation known to be slow and capture the output from the log. For example, loading the audit log page would give an output similar to the following:
2019-11-11 14:15:13,553 INFO  [stdout] (EJB default - 2) Hibernate: select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_
2019-11-11 14:15:13,554 DEBUG [org.hibernate.stat.internal.ConcurrentStatisticsImpl] (EJB default - 2) HHH000117: HQL: SELECT a FROM PeerData a, time: 1ms, rows: 2
2019-11-11 14:15:13,556 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 2) Session Metrics {
    304609 nanoseconds spent acquiring 1 JDBC connections;
    41073 nanoseconds spent releasing 1 JDBC connections;
    343180 nanoseconds spent preparing 1 JDBC statements;
    290351 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:14,400 INFO  [stdout] (EJB default - 10) Hibernate: select accesstree0_.pK as pK1_11_0_, accesstree0_.authorizationTreeUpdateNumber as authoriz2_11_0_, accesstree0_.rowProtection as rowProte3_11_0_, accesstree0_.rowVersion as rowVersi4_11_0_ from AuthorizationTreeUpdateData accesstree0_ where accesstree0_.pK=?
2019-11-11 14:15:14,402 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (EJB default - 10) Session Metrics {
    454643 nanoseconds spent acquiring 1 JDBC connections;
    81895 nanoseconds spent releasing 1 JDBC connections;
    519914 nanoseconds spent preparing 1 JDBC statements;
    433415 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}
2019-11-11 14:15:16,861 INFO  [org.cesecore.audit.impl.log4j.Log4jDevice] (default task-17) 2019-11-11 14:15:16+01:00;ACCESS_CONTROL;SUCCESS;ACCESSCONTROL;CORE;CN=SuperAdmin,O=PrimeKey Solutions AB,C=SE;;;;resource0=/administrator;resource1=/secureaudit/auditor/select
2019-11-11 14:15:16,862 DEBUG [org.cesecore.audit.log.InternalSecurityEventsLoggerSessionBean] (default task-17) LogDevice: Log4jDevice Proc: 1
2019-11-11 14:15:16,865 INFO  [stdout] (default task-17) Hibernate: insert into AuditRecordData (additionalDetails, authToken, customId, eventStatus, eventType, module, nodeId, rowProtection, rowVersion, searchDetail1, searchDetail2, sequenceNumber, service, timeStamp, pk) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2019-11-11 14:15:16,894 INFO  [org.hibernate.engine.internal.StatisticalLoggingSessionEventListener] (default task-17) Session Metrics {
    711999 nanoseconds spent acquiring 1 JDBC connections;
    34333 nanoseconds spent releasing 1 JDBC connections;
    749310 nanoseconds spent preparing 1 JDBC statements;
    321017 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    1637963 nanoseconds spent executing 1 flushes (flushing a total of 1 entities and 0 collections);
    0 nanoseconds spent executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)
}

TEXT

You can also use the ping utility in Linux to measure the RTT between the EJBCA machine and the DBMS machine.
> ping <HOST> -c 10
PING <HOST> (<IP>) 56(84) bytes of data.
64 bytes from <HOST> (<IP>): icmp_seq=1 ttl=64 time=0.028 ms
[...]
--- <HOST> ping statistics ---
10 packets transmitted, 10 received, 0% packet loss, time 9193ms
rtt min/avg/max/mdev = 0.052/0.077/0.086/0.013 ms

CODE

This is useful if your database resides on another machine, and you want to determine if the network between the EJBCA machine and the DBMS machine is a bottleneck.The investigation above shows quite normal values. It took about 350 ms to load the audit log page in Chromium. Of these 350 ms, around 6 ms seconds were spent on doing three queries against the database. Of these 6 ms, about 0.1 ms was incurred by network delays.Log Database Queries Using MariaDBIf you are using MariaDB, you can enable logging of slow queries, as well as queries not using an index, by running the following commands:
mysql -u root -e "SET GLOBAL slow_query_log=1;"
mysql -u root -e "SET GLOBAL slow_query_log_file='/tmp/mariadb-slow.log';"
mysql -u root -e "SET GLOBAL long_query_time=1.0;"
mysql -u root -e "SET GLOBAL log_queries_not_using_indexes=ON;"

CODE

The following displays an example of what the log file /tmp/mariadb-slow.log can look like if slow queries are detected:
# Time: 191111 14:32:56
# User@Host: ejbca[ejbca] @  [127.0.0.1]
# Thread_id: 83  Schema: ejbca  QC_hit: No
# Query_time: 0.000387  Lock_time: 0.000143  Rows_sent: 2  Rows_examined: 2
# Rows_affected: 0
SET timestamp=1573479176;
select peerdata0_.id as id1_25_, peerdata0_.connectorState as connecto2_25_, peerdata0_.data as data3_25_, peerdata0_.name as name4_25_, peerdata0_.rowProtection as rowProte5_25_, peerdata0_.rowVersion as rowVersi6_25_, peerdata0_.url as url7_25_ from PeerData peerdata0_;

TEXT

For more information, refer to the MariaDB Knowledge Base article Slow Query Log Overview.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Validation Authority


Validation Authority





The following provides information for troubleshooting validation authority issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Validation Authority error in the logs when publishingProblemI get the error message "Validation Authority ERROR, publishing is not working" in the logsIf there is an error publishing to the VA database, the VA/OCSP Responder will be out of sync with the CA. It is very important to re-synchronize the databases in that case.In case of failure to publish to the VA database, the following error message is displayed in the server log on the EJBCA server:
Validation Authority ERROR, publishing is not working
The error message is followed by more details of the error.The log must be monitored to discover such an error and if discovered, an alarm should notify and prompt the operator to fix the issue and then synchronize the VA database with the EJBCA database.Solution: Manually Synchronizing the Database of the VA At the beginning and after a failure in publishing to the VA responder, the master database of the publishers must be synchronized with the CertificateData and CRLData table of the database of EJBCA.If you only use OCSP and not CRL store, only the CertificateData table needs to be synchronized. If there is a single certificate out of sync, you can re-sync it by selecting Republish from the Admin GUI.Follow the steps below to synchronize the EJBCA database with the database of a pure VA instance (for example, where all certificates are issued on another instance).Note that the following procedure applies for MySQL, and should be adapted to your environment (database, hostnames, database name, and database credentials).Prevent any further issuing of new certificates and revocation of old certificates until the synchronization is finished, by blocking the port to the Admin GUI. To enable synchronization, run the following commands on the host of the CA. Run on the OCSP responder machine (as root user in MySQL).
mysql -u ejbca -p ocsp_db
mysql> drop table CertificateData;
mysql> drop table CRLData;

CODE

This drops and re-creates the tables containing the certificate and CRL information. Run the following on the CA server:
mysqldump -u ejbca -p --compress ejbca_db CertificateData > CertificateData.dat
mysqldump -u ejbca -p --compress ejbca_db CRLData > CRLData.dat
cat CertificateData.dat | mysql -h ocspresponder ocsp_db
cat CRLData.dat | mysql -h ocspresponder ocsp_db

CODE

 This can generally not be done from a Windows machine to a Linux machine, since Windows is not case sensitive.Check that the publishing is working before allowing issuing and revoking.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Publishing


Publishing





The following provides information for troubleshooting publishing issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Error when publishing certificates in LDAPProblemWhen publishing certificates in LDAP, I get the error "Object Class Violation : (65)"TroubleshootingYour LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.For more information, see LDAP Publisher/LDAP Search Publisher.




×










EJBCA 7.8.1
Troubleshooting Guide
Current: Enrollment Questions


Enrollment Questions





The following provides information for troubleshooting enrollment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Error issuing certificates regarding users having the same Subject DNCauseIf you receive the error that a user cannot have the same Subject DN as another user, when you are issuing certificates, this is caused by the Enforce unique DN check.By default, different end entities cannot have the same subject DN issued from one CA. The check enforces Subject DN uniqueness and is performed when new certificates are issued. This may be inconvenient in some cases as one user can appear as multiple end entities.SolutionTo disable the enforcement of subject DN uniqueness, do the following:In the CA GUI, click Certification Authorities under CA Functions.Click Edit CA and in the CA configuration, and clear the option Enforce unique DN.For more information on the Enforce unique DN option, see CA Fields.Exception with an SQL error when adding a new userProblemWhen adding a new user, an exception with an SQL error like the following is thrown: "Value too large for column USERDATA.SUBJECTALTNAME" or "Value too large for column USERDATA.SUBJECTDN".CauseThis can happen if you have specified one or more fields of the Subject Alternative Name with a total length exceeding 2000 characters (400 characters for subject DN).SolutionExtend the size of the column SUBJECTALTNAME and SUBJECTDN of the table USERDATA and SUBJECTDN of CERTIFICATEDATA.The following displays an example for extending the subjectDN and altName columns in MySQL (version > 5.0.3):
mysql> alter table CertificateData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectDN varchar(2048); 
mysql> alter table UserData modify subjectAltName varchar(2048);

CODE

The new column sizes can cause issues when applying indexes in some database versions, giving errors like for example: "Specified key was too long; max key length is 767 bytes"To circumvent this issue, create the index over a subset of the column by running the following:
mysql> create index certificatedata_idx4 ON CertificateData (subjectDN(250)); 

CODE

For more information on Subject Alternative Names and Subject DN Fields, see End Entity Profiles Fields.Error when issuing new certificateProblemWhen issuing a new certificate, I get the exception/error: Got request with status GENERATED (40), NEW, FAILED or INPROCESS required: foo; nested exception is: javax.ejb.EJBException:nullCauseWhen using the AuthenticationSession (default) all users have a STATUS. The status lifecycle begins with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a one-time-password scheme.SolutionTo issue a new certificate to the user, his/her status must be reset to NEW, FAILED, or INPROCESS.To reset the status, run the following:
bin/ejbca.sh ra setendentitystatus username status Status '10' is NEW

CODE

To view a list of all status codes, run:
bin/ejbca.sh ra setendentitystatus

CODE

For more information, see Create User Certificates and Roles and Access Rules Operations.I have enrolled manually for a server - why are my PKCS10 DN fields Ignored?PKCS#10 is a standard format for sending the public key (self signed to provide proof-of-possession) to a CA. EJBCA does not trust the DN parts the user enters when he creates the PKCS10 request. The only way to match the certificate with what you enter in the pkcs10 is to enter the same thing in the end entity in EJBCA. If you really trust your RAs that send certificate requests, there is an option to allow DN override in the Certificate Profile, see Certificate Profile Fields.Does EJBCA still support Browser Enrollment?For the time being, yes. Browser enrollment still exists in the EJBCA Public Web, but will not be updated and will disappear completely when the Public Web is retired in EJBCA and replaced by the EJBCA RA UI. The reason is that all major browser distributions have dropped support for Browser Enrollment. 




×










EJBCA
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.5
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.6.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.7.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.8.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.0
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×










EJBCA 7.9.1
Troubleshooting Guide
Current: Command Line Interface


Command Line Interface





The following provides information for troubleshooting CLI issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting.Problem: Cannot Access the EJBCA CLIWhen accessing EJBCA's CLI by running ${EJBCA_HOME}/bin/ejbca.sh you get the following error message:
> /opt/ejbca/bin/ejbca.sh 
Error: CLI could not contact EJBCA instance. Either your application server is not up and running, EJBCA has not been deployed successfully, or some firewall rule is blocking the CLI from the application server.

CODE

CauseUnder the hood, this is caused by an IllegalStateException with the error message "No EJB receiver available for handling".Troubleshooting Steps






It is assumed you are using JBoss as the application server and RHEL as the operating system. The steps for troubleshooting will be very similar if you are using for example Wildfly instead of JBoss, or another Linux distribution such as Debian.



Make sure JBoss is up and running:
ps aux | grep ${JBOSS_HOME}/bin/standalone.sh

CODE

If JBoss is not running, start it.Make sure EJBCA has been deployed correctly:
ls ${JBOSS_HOME}/standalone/deployments | grep ejbca.ear.deployed

CODE

If EJBCA has not been deployed correctly, check the JBoss log file to find out why:
cat ${JBOSS_HOME}/standalone/log/server.log | grep ERROR -C 10 | less

CODE

Fix the problem and the redeploy EJBCA by running the following:
cd ${EJBCA_HOME}
ant -q clean deployear

CODE

Make sure the application server is listening to the port configured in dist/ejbca-ejb-cli/jboss-ejb-client.properties (unless you have edited the configuration, it should be port 4447) .
sudo lsof -i:4447

CODE

If connecting remotely this port must be open in the firewall. Inspect your firewall rules and open this port for incoming TCP traffic if necessary.
sudo firewall-cmd --zone=public --list-ports | grep 4447/tcp

CODE

Make sure the user running the application server has read and execute access to relevant authentication files:If using local authentication, the user needs access to files in ${JBOSS_HOME}/domain/tmp/authIf using remote authentication, the user needs access to files in ${JBOSS_HOME}/standalone/tmp/authThe easiest way to achieve this is to run the application server as jboss user and ensure ${JBOSS_HOME} is owned by this user:
sudo chown -R jboss:jboss ${JBOSS_HOME}
sudo chmod -R 'g=u' ${JBOSS_HOME}
sudo find ${JBOSS_HOME} -type d -exec sudo chmod g+s {} \;

CODE






×






['https://doc.primekey.com/display//EJBCA781/Troubleshoot+Database+Performance']
['https://doc.primekey.com/display//EJBCA781/Validation+Authority']
['https://doc.primekey.com/display//EJBCA781/Publishing']
['/pages/viewpage.action?pageId=45057565']
['https://doc.primekey.com/display//EJBCA781/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA781/Installation+and+Deployment']
['https://doc.primekey.com/display//EJBCA781/Cryptography+and+Security']
['https://doc.primekey.com/display//EJBCA790/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCADS/Enrollment+Questions']
['https://doc.primekey.com/display//EJBCA790/Cryptography+and+Security']




EJBCA 7.3.1
Troubleshooting Guide
Current: Cryptography and Security


Cryptography and Security





The following provides information for troubleshooting cryptography and security issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. Where are software based CA keys stored in the database?These keys are stored in a PKCS#12 file, encrypted with a password. The PKCS#12 is stored in the database in the CryptoTokenData table.When a new end entity is created, where and how is the password stored?A one-time password is stored hashed with BCrypt in the UserData table in the database. If the option Clear text password is enabled when adding the user the password is stored in clear text, to be used for server-side generation. Clear text passwords are obfuscated with built-in password-based encryption. This is not considered a secure encryption, only for obfuscating so it is not possible to see (and remember) clear text passwords.If I enable key recovery, where are the end entities' private keys stored in the database?The private keys for key recovery are stored in the KeyRecoveryData table in the database. The data is encrypted with the CAs encryption key in a CMS (PKCS#7) structure using RSA and AES256. The private keys are only stored if key recovery is enabled.For more information, see Key Recovery.What is EJBCA's export classification (ECCN code)?In theory, EJBCA would be classified under ECCN code 5D002.c.1, and the PrimeKey PKI Appliance under 5A002.a.1 and approved for export under License Exception TSU. Refer to the Bureau of Industry and Security website for further details.However, in EJBCA, SignServer and the PrimeKey PKI Appliance encryption is only used for authentication and digital signatures. The products are therefore not controlled according to 5D002.c.1 or 5A002.a.1.I get the error "Signature was not correctly verified" when running an HSM in FIPS modeYou have probably set the same key to be used for signatures and encryption, which is not allowed according to FIPS. For more information on HSMs, see Hardware Security Modules (HSM).




×










EJBCA 7.3.1
Troubleshooting Guide
Current: Installation and Deployment


Installation and Deployment





The following provides information for troubleshooting installation and deployment issues. To view general troubleshooting tips and search for troubleshooting topics, see EJBCA Troubleshooting. I get timeouts and/or errors during startup of JBoss/Wildfly10Ensure that the application server has enough cores (more than one), enough CPU (otherwise timeouts will occur) and enough memory (will also slow down the system).Ensure that database indexes are applied, otherwise database searches get very slow as your database size grows.The following SQL file that is ready to run on your database contains a set of recommended database indexes that can be applied to your database:doc/sql-scripts/create-index-ejbca.sql.For more information, see Creating the Database.I get an error with "Java heap space" when building EJBCA (during ant deploy)?This error is because the default maximum allowed memory allocation for JAVA is set too low in your environment. My installation failed for some reason that is now fixed, how do I proceed?The best way to recover is usually o start over from scratch:Stop JBossMake sure the database is cleanDeploy and install EJBCAStop JBoss and check that it stops without problemsStart JBoss and check that it starts without problemsRemove the old superadmin.p12 in you browser and import the newly generated oneI get errors during 'ant deployear' or 'ant runinstall'.This is most usually due to a database configuration error. In the server log (JBOSS_HOME/standalone/log/server.log) you will probably see some SQLException errors. You should then:Make sure the settings in conf/database.properties are correctMake sure your configuration of the database in JBoss/WildFly is correctFollow the guidelines from "My installation failed for some reason that is now fixed, how do I proceed?"See the configuration and troubleshooting section in doc/howto/HOWTO-database.txt for additional database related information.I get an error with "Illegal key length" when using EJBCA?This is because you are using Oracle JDK (instead of OpenJDK) and have not installed the "Unlimited Strength Crypto Policy Files". See the prerequisites section in the the installation guide. Even if you think you have installed them, you have not. This error is simple and unique.It may also be that you are trying to enroll for a certificate passing in a public key with length that is shorter than the required key length specified in the Certificate Profile.After an upgrade I get a "java.lang.NoSuchMethodError" error accessing the UI.JBoss is bad at cleaning temporary files, sometimes we have to help. Remove the directories JBOSS_HOME/standalone/tmp and restart JBoss.During the build process I get errors like: BUILD FAILED /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerErrorYou probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant modules. You need the "optional tasks" included in the official ant distribution. Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=true

# ANT_HOME for rpm layout
ANT_HOME=/usr/share/ant
fi     

BASH

to
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
no_config=true
fi

# Setup ant configuration
if $no_config ; then
# Disable RPM layout
rpm_mode=false
else
# Use RPM layout
rpm_mode=false

# ANT_HOME for rpm layout
ANT_HOME=/your/ant/home
fi

BASH

For Ubuntu,  things are much easier, just 'sudo apt-get install ant' and 'sudo apt-get install ant-optional'.Where is the log file stored for tracking errors and debug information?JBOSS_HOME/standalone/log/server.log. How do I configure log level in JBoss?You can configure logging in JBoss to be able to dynamically change logging.For production systems, INFO log level is recommended:
/subsystem=logging/logger=org.ejbca:add(level=INFO)
/subsystem=logging/logger=org.cesecore:add(level=INFO)

CODE

To later enable DEBUG log level, if needed, use the following:
/subsystem=logging/logger=org.ejbca:write-attribute(name=level, value=DEBUG)
/subsystem=logging/logger=org.cesecore:write-attribute(name=level, value=DEBUG)

CODE

For more information on application server-specific instructions, see Application Servers. How do I modify the Public Web pages?You can add your own static pages under http://hostname:8080/ejbca/ by doing the following:Put your files (static HTML is easy) under modules/publicweb-gui/resources/Do a full build.Redeploy.For more information, see Customizing the User Interface.I get an error message when accessing the CA UIProblem: Error message "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224" when accessing the CA Web.Troubleshooting StepsMake sure you have imported to correct superadmin.p12 in your browser.You may have to delete and import the CA certificate in your application server trust-store by runningg the following:
ant javatruststore

CODE

You can also import another CA than the initial ManagementCA (My CA in the example), using the following command:
ant -Dca.name="My CA" javatruststore

CODE

Make sure you restart JBoss after making changes to the java trust store.Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. The file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.
Make sure you restart JBoss after making changes to the java trust store.

Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default' in JBoss. the file 'jboss-5.1.0.GA/server/default/deploy/jbossweb.sar/server.xml' holds the Tomcat configuration. The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in web.properties.

TEXT

Also the file $EJBCA_HOME/p12/tomcat.jks must be copied to $JBOSS_HOME/standalone/configuration/keystore/keystore.jks, where 'default' should be replaced with the JBoss configuration you are using.I get a blank page on the UI after start?Either you entered a hostname (in httpsserver.hostname in web.properties) that does not resolve to the machine where EJBCA is running during setup, or you changed the port that JBoss listens to. Make sure the hostname resolves to the machine EJBCA is running on.When running 'ant runinstall' or creating JKS or PKCS12 files you can't use longer password than 7 characters. Anything longer gives an error?Note, this is only relevant to OracleJDK. OpenJDK does not have this restriction.If you want to use strong crypto and/or password longer than 7 characters in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK. The policy files can be found at the same place as the JDK download. Further information on this can be found in the Sun documentation on the JCE.How do I manipulate EJBCA-keystores using JAVA's keytool?EJBCA supports the PKCS12 format for the keystore because it is a standard, and we like standards. Normally keytool (e.g. Java's) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-159.jar

CODE

It should be possible to import etc as well using keytool.How do I make a keystore using keytool with a real certificate from EJBCA?First generate a new keystore and a key pair:
$ keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123

BASH

You SUN keystore is now in the file 'myks.jks'. Next generate a certification request (PKCS10):
$ keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123

BASH

You now have the certification request in the file 'myreq.p10'. Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/ejbca', and select the link for NOT having a browser' Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'. Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field. Save the returned certificate as 'cert.pem'.Next import the Root CA certificate into the keystore 'myks.jks':
$ keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123

BASH

Import the certificate reply into the keystore:
$ keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123

BASH

Now you can take a look at your SUN keystore with:
$ keytool -list -keystore myks.jks

BASH

In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following arguments to every command above:
-provider org.bouncycastle.jce.provider.BouncyCastleProvider -storetype PKCS12 -providerpath $EJBCA_HOME/lib/bcprov-jdk15on-161.jar

CODE

Unfortunately a bug in keytool prevents this from functioning properly at the moment, therefore we recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally, not just for CAs.




×





